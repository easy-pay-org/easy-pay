{"ast":null,"code":"import axios from 'axios';\nexport default class services {\n  constructor() {\n    this.postRestaurant = restaurant => {\n      return this.service.post('newRestaurant', restaurant).then(res => {\n        console.log(res.data);\n        return res.data;\n      }).catch(err => console.log(err));\n    };\n\n    this.getOneCoaster = (user_id, name_restaurant) => {\n      return this.service.get(\"getRestaurant/\".concat(user_id, \"/\").concat(name_restaurant)).then(res => res.data).catch(err => console.log('Error', err));\n    };\n\n    this.service = axios.create({\n      baseURL: 'http://localhost:3000/api/'\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/juan/Documentos/Ironhack/Week8/Easy-Pay/client/src/service/owner-services.js"],"names":["axios","services","constructor","postRestaurant","restaurant","service","post","then","res","console","log","data","catch","err","getOneCoaster","user_id","name_restaurant","get","create","baseURL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,QAAN,CAAe;AAE5BC,EAAAA,WAAW,GAAG;AAAA,SAQdC,cARc,GAQIC,UAAD,IAAgB;AAC/B,aAAO,KAAKC,OAAL,CAAaC,IAAb,CAAkB,eAAlB,EAAmCF,UAAnC,EACJG,IADI,CACCC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,eAAOH,GAAG,CAACG,IAAX;AACD,OAJI,EAKJC,KALI,CAKEC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CALT,CAAP;AAMD,KAfa;;AAAA,SAiBdC,aAjBc,GAiBE,CAACC,OAAD,EAAUC,eAAV,KAA8B;AAC5C,aAAO,KAAKX,OAAL,CAAaY,GAAb,yBAAkCF,OAAlC,cAA6CC,eAA7C,GACJT,IADI,CACCC,GAAG,IAAIA,GAAG,CAACG,IADZ,EAEJC,KAFI,CAEEC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,GAArB,CAFT,CAAP;AAGD,KArBa;;AAEZ,SAAKR,OAAL,GAAeL,KAAK,CAACkB,MAAN,CAAa;AAC1BC,MAAAA,OAAO,EAAE;AADiB,KAAb,CAAf;AAGD;;AAP2B","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n\n  constructor() {\n\n    this.service = axios.create({\n      baseURL: 'http://localhost:3000/api/'\n    })\n  }\n\n\n  postRestaurant = (restaurant) => {\n    return this.service.post('newRestaurant', restaurant)\n      .then(res => {\n        console.log(res.data)\n        return res.data\n      })\n      .catch(err => console.log(err))\n  }\n\n  getOneCoaster = (user_id, name_restaurant) => {\n    return this.service.get(`getRestaurant/${user_id}/${name_restaurant}`)\n      .then(res => res.data)\n      .catch(err => console.log('Error', err))\n  }\n}"]},"metadata":{},"sourceType":"module"}